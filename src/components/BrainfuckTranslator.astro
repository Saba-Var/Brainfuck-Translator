---
import TextArea from './TextArea.astro'
import Output from './Output.astro'
import ExecutionTime from './ExecutionTime.astro'
---

<div class="translator">
  <TextArea />
  <ExecutionTime />
  <Output />
</div>

<script>
  const textToBrainfuck = (text: string): string => {
    let output = ''
    let currentValue = 0

    for (let i = 0; i < text.length; i++) {
      const targetValue = text.charCodeAt(i)
      const diff = targetValue - currentValue

      if (diff > 0) {
        output += '+'.repeat(diff)
      } else if (diff < 0) {
        output += '-'.repeat(Math.abs(diff))
      }

      output += '.'
      currentValue = targetValue

      if (i < text.length - 1) {
        output += '>'
      }
    }

    return output
  }

  const input = document.getElementById('input')
  const translateBtn = document.getElementById('translate-btn')
  const copyBtn = document.getElementById('copy-btn')
  const output = document.getElementById('output')
  const executionTime = document.getElementById('execution-time')

  translateBtn?.addEventListener('click', () => {
    if (input instanceof HTMLTextAreaElement && output) {
      const text = input.value
      if (text) {
        const startTime = performance.now()
        const brainfuck = textToBrainfuck(text)
        const endTime = performance.now()
        const timeTaken = endTime - startTime

        output.textContent = brainfuck
        output.classList.remove('hidden')
        copyBtn?.classList.remove('hidden')

        if (executionTime) {
          executionTime.textContent = `Execution time: ${timeTaken.toFixed(3)} ms`
          executionTime.classList.remove('hidden')
        }
      }
    }
  })

  copyBtn?.addEventListener('click', async () => {
    try {
      if (output) {
        await navigator.clipboard.writeText(output.textContent || '')
        if (copyBtn) {
          const originalText = copyBtn.textContent
          copyBtn.textContent = 'Copied!'
          setTimeout(() => {
            if (copyBtn) copyBtn.textContent = originalText
          }, 2000)
        }
      }
    } catch (err) {
      console.error('Failed to copy:', err)
    }
  })
</script>

<style>
  .translator {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
</style>
